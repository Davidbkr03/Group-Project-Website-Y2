@page "/top-bar"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

<div class="top-bar">
                    <div class="logo">
                        <img src="image-logo.png" alt="Logo" class="logo"/>
                    </div>
                    <div class="profile">
                        @if (!cookieExists)
                        {
                            <button class="btn-secondary" @onclick="TogglePanelLogin">Log In</button>
                        }
                        else
                        {
                            <button class="" @onclick="TogglePanelProfile">
                                <img src="image-profile.png" alt="Profile" class="logo"/>
                            </button>
                        }
                    </div>
    <div class="component-container @_componentContainerClass">
        @if (_showPanel)
        {
            <Log_In onClose="TogglePanelAndLoadPosts" />
        }
    </div>
                </div>

@code {
    private bool _showPanel = false;
    private bool cookieExists = false;
    private bool _isComponentExiting = false; // New state
    private bool isJavaScriptInteropExecuted = false;
    private string _componentContainerClass = ""; // Initially no class
    private string backgroundblur = ""; // New state

    private async Task TogglePanelAndLoadPosts()
    {
        TogglePanelLogin();
    }

    private async Task TogglePanelProfile()
    {
        await JSRuntime.InvokeVoidAsync("window.open", new Uri("/Profile", UriKind.RelativeOrAbsolute).ToString(), "_blank");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            cookieExists = await JSRuntime.InvokeAsync<bool>("checkCookieExists", "MyCookie");
            StateHasChanged(); // Request a re-render with the new state
        }
    }


    private async void TogglePanelLogin()
    {

        if (_showPanel) // Handle closing the panel
        {
            _isComponentExiting = true;
            _componentContainerClass = ""; // Remove 'show' class immediately for fade-out
            backgroundblur = "";
            await Task.Delay(300); // Wait for fade-out
            _showPanel = false; // Now actually hide the panel
            _isComponentExiting = false;
        }
        else // Handle opening the panel
        {
            _showPanel = true;
            _componentContainerClass = "show"; // Add 'show' class for immediate visibility
            backgroundblur = "main-page-blurred";
        }
        //await LoadPostsAsync();
    }
}
